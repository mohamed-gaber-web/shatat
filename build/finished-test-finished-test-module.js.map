{"version":3,"sources":["./src/app/training/finished-test/finished-test.module.ts","./src/app/shared/services/test.service.ts","./src/app/training/finished-test/finished-test.page.scss","./src/app/training/finished-test/finished-test.page.html","./src/app/training/finished-test/finished-test.page.ts","./src/app/training/finished-test/finished-test-routing.module.ts"],"names":[],"mappings":"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","file":"finished-test-finished-test-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FinishedTestPageRoutingModule } from './finished-test-routing.module';\r\nimport { FinishedTestPage } from './finished-test.page';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    FinishedTestPageRoutingModule\r\n  ],\r\n  declarations: [FinishedTestPage]\r\n})\r\nexport class FinishedTestPageModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport {\r\n  getTextType,\r\n  finishedTest,\r\n  getUserActiveTest,\r\n  sendAnswerTest,\r\n  getCertificate}\r\nfrom './../../api.constants';\r\n\r\nimport { AnswerTestModel } from '../models/answerTestModel';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TestService {\r\n  offset: number = 1;\r\n  authKey: any;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Get Test\r\n   * courseId [ number ]\r\n   * offset [ number ]\r\n   *\r\n   */\r\n  getTestType(courseId: number, offset: number) {\r\n    const params = `?courseId=${courseId}&offset=${offset}`\r\n    return this.http.get(`${getTextType}` + params );\r\n  }\r\n\r\n    /**\r\n   * Get check user test\r\n   * return isActive [ boolean ]\r\n   * return testApi [  ]\r\n   *\r\n   */\r\n  checkUserTest() {\r\n      return this.http.get(`${getUserActiveTest}`);\r\n  }\r\n\r\n\r\n    /**\r\n   * send answer question\r\n   *\r\n   */\r\n  sendAnswerTesting(answerObj: AnswerTestModel) {\r\n    return this.http.post(`${sendAnswerTest}` , answerObj);\r\n  }\r\n\r\n    /**\r\n   * send answer question\r\n   *\r\n   */\r\n    finishedTest(userTestId: number) {\r\n      const params = `?userTestId=${userTestId}`;\r\n      return this.http.post(`${finishedTest}` + params, {});\r\n    }\r\n\r\n    /**\r\n     * Get Certificate\r\n     * courseId [ number ]\r\n     *\r\n   */\r\n    getCertificate(courseId: number) {\r\n\r\n      this.authKey = localStorage.getItem('access_token');\r\n      const httpOptions = {\r\n        responseType: 'blob' as 'json',\r\n        headers: new HttpHeaders({\r\n          'Authorization': this.authKey,\r\n        })\r\n      };\r\n      const params = `?courseId=${courseId}`;\r\n      return this.http.get(`${getCertificate}` + params, httpOptions);\r\n    }\r\n\r\n}\r\n","export default \"ion-card {\\n  padding: 50px 0;\\n  background-color: #fff;\\n  text-align: center;\\n}\\nion-card ion-button {\\n  color: #fff !important;\\n}\\nion-card ion-card-content {\\n  font-size: 22px;\\n  font-weight: 600;\\n  color: var(--ion-color-second-app);\\n  text-align: center;\\n}\\nion-card img {\\n  max-width: 150px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxmaW5pc2hlZC10ZXN0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0FBQ0Y7QUFDRTtFQUNFLHNCQUFBO0FBQ0o7QUFFRTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGtDQUFBO0VBQ0Esa0JBQUE7QUFBSjtBQUdFO0VBQ0UsZ0JBQUE7QUFESiIsImZpbGUiOiJmaW5pc2hlZC10ZXN0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIHtcclxuICBwYWRkaW5nOiA1MHB4IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gIGlvbi1idXR0b24ge1xyXG4gICAgY29sb3I6ICNmZmYhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgaW9uLWNhcmQtY29udGVudCB7XHJcbiAgICBmb250LXNpemU6IDIycHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1zZWNvbmQtYXBwKTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gIGltZyB7XHJcbiAgICBtYXgtd2lkdGg6IDE1MHB4O1xyXG4gIH1cclxufVxyXG4iXX0= */\";","export default \"<ion-content>\\r\\n\\r\\n  <ion-card>\\r\\n    <img src=\\\"../../../assets/images/finish-line-black.png\\\" alt=\\\"\\\">\\r\\n    <ion-card-content>\\r\\n      Thank you to finished This Test please click to finished or previous\\r\\n    </ion-card-content>\\r\\n\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"6\\\"> <ion-button (click)=\\\"prev()\\\" fill=\\\"outline\\\">Previous</ion-button></ion-col>\\r\\n        <ion-col size=\\\"6\\\"><ion-button (click)=\\\"finishedTest()\\\" fill=\\\"outline\\\">Finished</ion-button></ion-col>\\r\\n\\r\\n\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n\\r\\n  </ion-card>\\r\\n\\r\\n</ion-content>\\r\\n\";","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TestService } from 'src/app/shared/services/test.service';\r\n\r\n@Component({\r\n  selector: 'app-finished-test',\r\n  templateUrl: './finished-test.page.html',\r\n  styleUrls: ['./finished-test.page.scss'],\r\n})\r\nexport class FinishedTestPage implements OnInit {\r\n\r\n  userTestId: any;\r\n  courseId: any;\r\n  pageNumber: any;\r\n\r\n  constructor(private testService: TestService, private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.userTestId = this.route.snapshot.paramMap.get('userTestId');\r\n    this.courseId = this.route.snapshot.paramMap.get('courseId');\r\n    this.pageNumber = this.route.snapshot.paramMap.get('offset');\r\n\r\n  }\r\n\r\n  finishedTest() {\r\n    this.testService.finishedTest(this.userTestId)\r\n    .subscribe(response => {\r\n      localStorage.setItem('testId', this.userTestId);\r\n      this.router.navigate(['/courses/tabs/my-courses']);\r\n      console.log(response);\r\n    })\r\n  }\r\n\r\n  prev() {\r\n    this.testService.getTestType(this.courseId, this.pageNumber-1)\r\n    .subscribe(response => {\r\n      if(response) {\r\n        this.router.navigate(['/exercise/test-course', {courseId: this.courseId}]);\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FinishedTestPage } from './finished-test.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FinishedTestPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FinishedTestPageRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}